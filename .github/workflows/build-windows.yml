name: Build Windows Installer

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-win:
    runs-on: windows-2022
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            client/package-lock.json
            server/package-lock.json

      - name: Show versions
        run: |
          node -v | Tee-Object -FilePath build-log.txt
          npm -v  | Tee-Object -FilePath build-log.txt -Append

      - name: Install root deps (ci → fallback)
        run: |
          npm ci 2>&1 | Tee-Object -FilePath build-log.txt -Append
          if ($LASTEXITCODE -ne 0) {
            "npm ci failed; running npm install..." | Tee-Object -FilePath build-log.txt -Append
            npm install 2>&1 | Tee-Object -FilePath build-log.txt -Append
          }

      - name: Install client deps (ci → fallback)
        run: |
          npm ci --prefix client 2>&1 | Tee-Object -FilePath build-log.txt -Append
          if ($LASTEXITCODE -ne 0) {
            "npm ci (client) failed; running npm install..." | Tee-Object -FilePath build-log.txt -Append
            npm install --prefix client 2>&1 | Tee-Object -FilePath build-log.txt -Append
          }

      - name: Install server deps (ci → fallback)
        run: |
          npm ci --prefix server 2>&1 | Tee-Object -FilePath build-log.txt -Append
          if ($LASTEXITCODE -ne 0) {
            "npm ci (server) failed; running npm install..." | Tee-Object -FilePath build-log.txt -Append
            npm install --prefix server 2>&1 | Tee-Object -FilePath build-log.txt -Append
          }

      # Your "dist" script already runs "build:react" + electron-builder
      - name: Build and package (electron-builder, verbose)
        env:
          ELECTRON_BUILDER_LOG_LEVEL: debug
          DEBUG: electron-builder
          CI: ""   # prevents CRA warnings-as-errors
          NODE_ENV: production
        run: |
          npm run dist 2>&1 | Tee-Object -FilePath build-log.txt -Append

      - name: Diagnostic listing
        if: always()
        run: |
          "=== Dist tree ===" | Tee-Object -FilePath build-log.txt -Append
          if (Test-Path dist) {
            Get-ChildItem dist -Recurse -Force | Out-String | Tee-Object -FilePath build-log.txt -Append
          } else {
            "dist directory not found" | Tee-Object -FilePath build-log.txt -Append
          }

      - name: Upload installers and metadata
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist\**\*.exe
            dist\**\*.msi
            dist\latest.yml
            dist\builder-effective-config.yaml
          if-no-files-found: warn

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build-log.txt
          if-no-files-found: warn
