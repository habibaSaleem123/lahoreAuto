name: Build Windows Installer

on:
  workflow_dispatch:
  push:
    branches: [ main ]   # change if your default branch isn't 'main'

jobs:
  build-win:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            client/package-lock.json
            server/package-lock.json

      - name: Show versions
        run: |
          node -v
          npm -v

      - name: Show repo layout (sanity check)
        run: |
          echo === root ===
          dir
          echo === client ===
          if exist client (dir client) else (echo ERROR: client folder missing & exit 1)
          echo === server ===
          if exist server (dir server) else (echo ERROR: server folder missing & exit 1)
          echo === assets (icons) ===
          if exist assets (dir assets) else (echo NOTE: assets folder missing)

      # ---------- Install deps (root, client, server) ----------
      - name: Install root deps (ci)
        run: npm ci
        continue-on-error: true
      - name: Install root deps (fallback)
        if: ${{ failure() }}
        run: npm install

      - name: Install client deps (ci)
        run: npm ci --prefix client
        continue-on-error: true
      - name: Install client deps (fallback)
        if: ${{ failure() }}
        run: npm install --prefix client

      - name: Install server deps (ci)
        run: npm ci --prefix server
        continue-on-error: true
      - name: Install server deps (fallback)
        if: ${{ failure() }}
        run: npm install --prefix server

      # ---------- Build React (avoid CRA warnings-as-errors) ----------
      - name: Build client
        run: npm --prefix client run build
        env:
          CI: ""   # prevents CRA from failing on warnings

      # ---------- Figure out Electron version & rebuild better-sqlite3 ----------
      - name: Compute Electron version
        id: ele
        shell: bash
        run: |
          VER=$(node -p "require('./package.json').devDependencies.electron.replace('^','')")
          echo "version=$VER" >> $GITHUB_OUTPUT

      - name: Rebuild better-sqlite3 for Electron
        run: |
          echo Electron target: ${{ steps.ele.outputs.version }}
          npm rebuild better-sqlite3 --runtime=electron --target=${{ steps.ele.outputs.version }} --disturl=https://electronjs.org/headers --build-from-source
          npx electron-builder install-app-deps
        env:
          npm_config_msvs_version: "2022"

      # ---------- Package Windows (.exe) with verbose logs ----------
      - name: Package Windows (.exe)
        run: |
          $env:DEBUG="electron-builder"
          $env:ELECTRON_BUILDER_LOG_LEVEL="debug"
          $env:CI=""
          npm run dist 2>&1 | Tee-Object -FilePath build-log.txt
        shell: powershell

      # ---------- Upload the installer & logs (even on failure) ----------
      - name: Upload installer
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist\*Setup*.exe
            dist\*.exe

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: build-log.txt
